use Libraries.Game.Graphics.Drawable
use Libraries.Game.Graphics.Label
use Libraries.Game.Game
use Libraries.Interface.Item2D
use Libraries.Interface.Events.CollisionListener2D
use Libraries.Interface.Events.CollisionEvent2D
use GameObject
use Libraries.Compute.Vector2

class GameCollision is CollisionListener2D
    private Game main
    integer score = 0
    Drawable Counter1
    Drawable Counter2 
    Vector2 force

    action BeginCollision(CollisionEvent2D event)
        GameObject itemA = cast(GameObject, event:GetItemA())
        GameObject itemB = cast(GameObject, event:GetItemB())
        //output "itemA: " + itemA:GetName()
        //output "itemB: " + itemB:GetName()
        // BasicBox
        // Standard cannon ball can ONLY destory wooden stuff
        if itemA:GetName() = "cannonball" and itemB:GetName() = "BasicBlock"
            force = itemA:GetLinearVelocity()
            //output "Velocity = " + force:Length()
            if force:Length() > 800
                itemB:RemoveFromGame(main)
            end
        elseif itemA:GetName() = "BasicBlock" and itemB:GetName() = "cannonball"
            force = itemB:GetLinearVelocity()
            //output "Velocity = " + force:Length()
            if force:Length() > 800
                itemA:RemoveFromGame(main)
            end
        end
/*
        if itemA:GetName() = "CannonBall" and itemB:GetName() = "WoodenRectangle"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                itemB:RemoveFromGame(main)
            end
        elseif itemA:GetName() = "WoodenRectangle" and itemB:GetName() = "CannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                itemA:RemoveFromGame(main)
            end
        end

        if itemA:GetName() = "CannonBall" and itemB:GetName() = "Fish"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                itemB:RemoveFromGame(main)
            end
        elseif itemA:GetName() = "Fish" and itemB:GetName() = "CannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                itemA:RemoveFromGame(main)
            end
        end
        /*
        //***************************************************************************************************************************************************************
        // High-Explosive(HE) cannon ball can ONLY destory brick stuff
        if itemA:GetName() = "objHECannonBall" and itemB:GetName() = "objBrickBox"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemB)
            else
                itemB:SetUnmovable()
            end
        elseif itemA:GetName() = "objBrickBox" and itemB:GetName() = "objHECannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemA)
            end
        end

        if itemA:GetName() = "objHECannonBall" and itemB:GetName() = "objBrickRectangle"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemB)           
            end
        elseif itemA:GetName() = "objBrickRectangle" and itemB:GetName() = "objHECannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemA)            
            end
        end
            
        if itemA:GetName() = "objHECannonBall" and itemB:GetName() = "objFish"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemB)
            end
        elseif itemA:GetName() = "objFish" and itemB:GetName() = "objHECannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemA)
            end
        end
        //*************************************************************************************************************************************************************
        // Armor-piercing(AP) cannon ball can ONLY destory steel stuff
        if itemA:GetName() = "objAPCannonBall" and itemB:GetName() = "objSteelBox"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemB)            
            end
        elseif itemA:GetName() = "objSteelBox" and itemB:GetName() = "objAPCannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemA)           
            end
        end

        if itemA:GetName() = "objAPCannonBall" and itemB:GetName() = "objSteelRectangle"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemB)           
            end
        elseif itemA:GetName() = "objSteelRectangle" and itemB:GetName() = "objAPCannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemA)
            end
        end

        if itemA:GetName() = "objAPCannonBall" and itemB:GetName() = "objFish"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemB)
            end
        elseif itemA:GetName() = "objFish" and itemB:GetName() = "objAPCannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemA)
            end
        end
        */
    end
    action FinishCollision(CollisionEvent2D event)
        GameObject itemA = cast(GameObject, event:GetItemA())
        GameObject itemB = cast(GameObject, event:GetItemB())
    end
end
