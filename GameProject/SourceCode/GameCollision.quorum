use Libraries.Game.Graphics.Drawable
use Libraries.Game.Graphics.Label
use Libraries.Game.Game
use Libraries.Interface.Item2D
use Libraries.Interface.Events.CollisionListener2D
use Libraries.Interface.Events.CollisionEvent2D
use GameObject

class GameCollision is CollisionListener2D
    public GameRoom roo
    integer score = 0
    Drawable Counter1
    Drawable Counter2 

    action BeginCollision(CollisionEvent2D event)
/*
        GameObject itemA = cast(GameObject, event:GetItemA())
        GameObject itemB = cast(GameObject, event:GetItemB())

        if itemA:GetName() = "objFish" and itemB:GetName() = "objCat"
            roo:QueueDelObj(itemA)
        elseif itemA:GetName() = "objCat" and itemB:GetName() = "objFish"
            roo:QueueDelObj(itemB)
        end

        if itemA:GetName() = "objExit1" and itemB:GetName() = "objCat"
            roo:QueueDelObj(itemA)
            roo:LoadRoom("./map2.txt")
        elseif itemA:GetName() = "objCat" and itemB:GetName() = "objExit1"
            roo:QueueDelObj(itemB)
            roo:LoadRoom("./map2.txt")
        end

        if itemA:GetName() = "objExit2" and itemB:GetName() = "objCat"
            roo:QueueDelObj(itemA)
            roo:LoadRoom("./map0.txt")
        elseif itemA:GetName() = "objCat" and itemB:GetName() = "objExit2"
            roo:QueueDelObj(itemB)
            roo:LoadRoom("./map0.txt")
        end

        if itemA:GetName() = "objBox" and itemB:GetName() = "objBlock"
           // roo:QueueDelObj(itemA)
            score = score + 1
            output score 
         /*elseif itemA:GetName() = "objBlock" and itemB:GetName() = "objBox"
            roo:QueueDelObj(itemB)
            score = score + 5
            output score 
        end

        if itemA:GetName() = "objKey" and itemB:GetName() = "objCat"
            roo:QueueDelObj(itemA)
            integer i = roo:GetObjCount()
            repeat until i = 0
                if (roo:GetObjAtIndex(i-1):GetName() = "objLock")
                    roo:QueueDelObj(roo:GetObjAtIndex(i-1))
                end
                i = i - 1
            end
        elseif itemA:GetName() = "objCat" and itemB:GetName() = "objKey"
            roo:QueueDelObj(itemB)
            integer i = roo:GetObjCount()
            repeat until i = 0
                if (roo:GetObjAtIndex(i-1):GetName() = "objLock")
                    roo:QueueDelObj(roo:GetObjAtIndex(i-1))
                end
                i = i - 1
            end*/
        end


    action LoadCount(Drawable d, integer digit)
        integer tmp = digit
                if tmp = 0 
                    d:Load("resources/SYMB_0.png")
                else if tmp = 1 
                    d:Load("resources/SYMB_1.png")
                else if tmp = 2
                    d:Load("resources/SYMB_2.png")
                else if tmp = 3
                    d:Load("resources/SYMB_3.png")
                else if tmp = 4
                    d:Load("resources/SYMB_4.png")
                else if tmp = 5
                    d:Load("resources/SYMB_5.png")
                else if tmp = 6
                    d:Load("resources/SYMB_6.png")
                else if tmp = 7
                    d:Load("resources/SYMB_7.png")
                else if tmp = 8 
                    d:Load("resources/SYMB_8.png")
                else if tmp = 9
                    d:Load("resources/SYMB_9.png")
                    end 
                    end
                    end
                    end
                    end
                    end
                    end
                    end
                    end
                    end
    end
    
    action SetScore (Game newGame)
         /*   integer count = score
            integer tmp = 0
            currentCount = score
            tmp = count mod 10
            if (tmp = 0)
                LoadCount(Counter2, count)
            else LoadCount(Counter2, tmp)
            end
            count = count / 10
            LoadCount(Counter1, count)
        Counter1:SetPosition(20,200)
        Counter2:SetPosition(70,200)
        newGame:Add(Counter1)
        newGame:Add(Counter2) */
        integer count = score
        integer tmp = count mod 10
        integer tmp2 = score / 10
        LoadCount(Counter1,tmp)
        LoadCount(Counter2, tmp2)
        Counter1:SetPosition(70,200)
        Counter2:SetPosition(20,200)
        newGame:Add(Counter1)
        newGame:Add(Counter2)
    end
end
