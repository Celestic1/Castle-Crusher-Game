use Libraries.Game.Graphics.Drawable
use Libraries.Game.Graphics.Label
use Libraries.Game.Game
use Libraries.Interface.Item2D
use Libraries.Interface.Events.CollisionListener2D
use Libraries.Interface.Events.CollisionEvent2D
use GameObject
use Libraries.Compute.Vector2

class GameCollision is CollisionListener2D
    private Game main
    public integer starCount = 0
    public integer score = 0
    public boolean victory = false
    Vector2 force
    
    action BeginCollision(CollisionEvent2D event)
        GameObject itemA = cast(GameObject, event:GetItemA())
        GameObject itemB = cast(GameObject, event:GetItemB())
        //output "itemA: " + itemA:GetName()
        //output "itemB: " + itemB:GetName()
        // BasicBox
        // Standard cannon ball can ONLY destory wooden stuff
        //output "Dudes = " + starCount
        /*if itemA:GetName() = "Star" and itemB:GetName() = "BasicBox"
            force = itemA:GetLinearVelocity()
                score = score + 5
            itemA:RemoveFromGame(main)
            starCount = starCount - 1
        elseif itemA:GetName() = "BasicBox" and itemB:GetName() = "Star"
            force = itemB:GetLinearVelocity()
                score = score + 5
                itemB:RemoveFromGame(main)
            starCount = starCount - 1
        end

        if itemA:GetName() = "Star" and itemB:GetName() = "BasicBox"
            force = itemA:GetLinearVelocity()
                itemA:RemoveFromGame(main)
            //starCount = starCount - 1
        elseif itemA:GetName() = "BasicBox" and itemB:GetName() = "Star"
            force = itemB:GetLinearVelocity()
                score = score + 5
                itemB:RemoveFromGame(main)
            //starCount = starCount - 1
        end

        if itemA:GetName() = "Star" and itemB:GetName() = "BasicBox2"
            force = itemA:GetLinearVelocity()
                score = score + 5
                itemA:RemoveFromGame(main)
            //starCount = starCount - 1
        elseif itemA:GetName() = "BasicBox2" and itemB:GetName() = "Star"
            force = itemB:GetLinearVelocity()
                score = score + 5
                itemB:RemoveFromGame(main)
            //starCount = starCount - 1
        end

        if itemA:GetName() = "Star" and itemB:GetName() = "BasicBox3"
            force = itemA:GetLinearVelocity()
                score = score + 5
                itemA:RemoveFromGame(main)
            //starCount = starCount - 1
        elseif itemA:GetName() = "BasicBox3" and itemB:GetName() = "Star"
            force = itemB:GetLinearVelocity()
                score = score + 5
                itemB:RemoveFromGame(main)
            //starCount = starCount - 1
        end

        if itemA:GetName() = "MiniBasicBox" and itemB:GetName() = "Star"
            force = itemA:GetLinearVelocity()
                score = score + 5
                itemB:RemoveFromGame(main)
            //starCount = starCount - 1
        elseif itemA:GetName() = "Star" and itemB:GetName() = "MiniBasicBox"
            force = itemB:GetLinearVelocity()
                score = score + 5
                itemA:RemoveFromGame(main)
            //starCount = starCount - 1
        end*/
 
        if itemA:GetName() = "CannonBall" and itemB:GetName() = "Star"
            force = itemA:GetLinearVelocity()
            if force:Length() > 800
                score = score + 5
                itemB:RemoveFromGame(main)
                starCount = starCount - 1
            end
        elseif itemA:GetName() = "Star" and itemB:GetName() = "CannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 800
                score = score + 5
                itemA:RemoveFromGame(main)
            starCount = starCount - 1
            end
        end
        if starCount = 0
            victory = true
        end
        //output "Stars ="+ starCount
    end
    action Victorious returns boolean
        return victory
    end
    action setStarCount (integer x)
        starCount = x
    end
    action getStarCount returns integer
        return starCount
    end
end