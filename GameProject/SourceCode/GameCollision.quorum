use Libraries.Game.Graphics.Drawable
use Libraries.Game.Graphics.Label
use Libraries.Game.Game
use Libraries.Interface.Item2D
use Libraries.Interface.Events.CollisionListener2D
use Libraries.Interface.Events.CollisionEvent2D
use GameObject
use Libraries.Compute.Vector2

class GameCollision is CollisionListener2D
    public GameRoom roo
    integer score = 0
    Drawable Counter1
    Drawable Counter2 
    public Main main
    Vector2 force

    action BeginCollision(CollisionEvent2D event)
        GameObject itemA = cast(GameObject, event:GetItemA())
        GameObject itemB = cast(GameObject, event:GetItemB())

        // Standard cannon ball can ONLY destory wooden stuff
        if itemA:GetName() = "CannonBall" and itemB:GetName() = "BasicBox"
            force = itemA:GetLinearVelocity()
            output "Velocity = " + force:Length()
            if force:Length() > 400
                itemB:RemoveFromGame(main)
            end
        elseif itemA:GetName() = "BasicBox" and itemB:GetName() = "CannonBall"
            force = itemB:GetLinearVelocity()
            output "Velocity = " + force:Length()
            if force:Length() > 400
                itemA:RemoveFromGame(main)
            end
        end
/*
        if itemA:GetName() = "CannonBall" and itemB:GetName() = "WoodenRectangle"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                itemB:RemoveFromGame(main)
            end
        elseif itemA:GetName() = "WoodenRectangle" and itemB:GetName() = "CannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                itemA:RemoveFromGame(main)
            end
        end

        if itemA:GetName() = "CannonBall" and itemB:GetName() = "Fish"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                itemB:RemoveFromGame(main)
            end
        elseif itemA:GetName() = "Fish" and itemB:GetName() = "CannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                itemA:RemoveFromGame(main)
            end
        end
        /*
        //***************************************************************************************************************************************************************
        // High-Explosive(HE) cannon ball can ONLY destory brick stuff
        if itemA:GetName() = "objHECannonBall" and itemB:GetName() = "objBrickBox"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemB)
            else
                itemB:SetUnmovable()
            end
        elseif itemA:GetName() = "objBrickBox" and itemB:GetName() = "objHECannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemA)
            end
        end

        if itemA:GetName() = "objHECannonBall" and itemB:GetName() = "objBrickRectangle"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemB)           
            end
        elseif itemA:GetName() = "objBrickRectangle" and itemB:GetName() = "objHECannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemA)            
            end
        end
            
        if itemA:GetName() = "objHECannonBall" and itemB:GetName() = "objFish"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemB)
            end
        elseif itemA:GetName() = "objFish" and itemB:GetName() = "objHECannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemA)
            end
        end
        //*************************************************************************************************************************************************************
        // Armor-piercing(AP) cannon ball can ONLY destory steel stuff
        if itemA:GetName() = "objAPCannonBall" and itemB:GetName() = "objSteelBox"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemB)            
            end
        elseif itemA:GetName() = "objSteelBox" and itemB:GetName() = "objAPCannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemA)           
            end
        end

        if itemA:GetName() = "objAPCannonBall" and itemB:GetName() = "objSteelRectangle"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemB)           
            end
        elseif itemA:GetName() = "objSteelRectangle" and itemB:GetName() = "objAPCannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemA)
            end
        end

        if itemA:GetName() = "objAPCannonBall" and itemB:GetName() = "objFish"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemB)
            end
        elseif itemA:GetName() = "objFish" and itemB:GetName() = "objAPCannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                //roo:QueueDelObj(itemA)
            end
        end
        */
    end

    action LoadCount(Drawable d, integer digit)
        integer tmp = digit
                if tmp = 0 
                    d:Load("resources/SYMB_0.png")
                else if tmp = 1 
                    d:Load("resources/SYMB_1.png")
                else if tmp = 2
                    d:Load("resources/SYMB_2.png")
                else if tmp = 3
                    d:Load("resources/SYMB_3.png")
                else if tmp = 4
                    d:Load("resources/SYMB_4.png")
                else if tmp = 5
                    d:Load("resources/SYMB_5.png")
                else if tmp = 6
                    d:Load("resources/SYMB_6.png")
                else if tmp = 7
                    d:Load("resources/SYMB_7.png")
                else if tmp = 8 
                    d:Load("resources/SYMB_8.png")
                else if tmp = 9
                    d:Load("resources/SYMB_9.png")
                    end 
                    end
                    end
                    end
                    end
                    end
                    end
                    end
                    end
                    end
    end
    
    action SetScore (Game newGame)
         /*   integer count = score
            integer tmp = 0
            currentCount = score
            tmp = count mod 10
            if (tmp = 0)
                LoadCount(Counter2, count)
            else LoadCount(Counter2, tmp)
            end
            count = count / 10
            LoadCount(Counter1, count)
        Counter1:SetPosition(20,200)
        Counter2:SetPosition(70,200)
        newGame:Add(Counter1)
        newGame:Add(Counter2) */
        integer count = score
        integer tmp = count mod 10
        integer tmp2 = score / 10
        LoadCount(Counter1,tmp)
        LoadCount(Counter2, tmp2)
        Counter1:SetPosition(70,200)
        Counter2:SetPosition(20,200)
        newGame:Add(Counter1)
        newGame:Add(Counter2)
    end
end
