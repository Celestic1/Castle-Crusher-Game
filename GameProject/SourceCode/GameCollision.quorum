use Libraries.Game.Graphics.Drawable
use Libraries.Interface.Events.CollisionListener2D
use Libraries.Interface.Events.CollisionEvent2D
use Libraries.Compute.Vector2
use GameObject

class GameCollision is CollisionListener2D
    public GameRoom roo
    Vector2 force

    action BeginCollision(CollisionEvent2D event)
        GameObject itemA = cast(GameObject, event:GetItemA())
        GameObject itemB = cast(GameObject, event:GetItemB())

        // Standard cannon ball can ONLY destory wooden stuff
        if itemA:GetName() = "objStandardCannonBall" and itemB:GetName() = "objWoodenBox"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                roo:QueueDelObj(itemB)
            end
        elseif itemA:GetName() = "objWoodenBox" and itemB:GetName() = "objStandardCannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                roo:QueueDelObj(itemA)
            end
        end

        if itemA:GetName() = "objStandardCannonBall" and itemB:GetName() = "objWoodenRectangle"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                roo:QueueDelObj(itemB)
            end
        elseif itemA:GetName() = "objWoodenRectangle" and itemB:GetName() = "objStandardCannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                roo:QueueDelObj(itemA)
            end
        end

        if itemA:GetName() = "objStandardCannonBall" and itemB:GetName() = "objFish"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                roo:QueueDelObj(itemB)
            end
        elseif itemA:GetName() = "objFish" and itemB:GetName() = "objStandardCannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                roo:QueueDelObj(itemA)
            end
        end
        //***************************************************************************************************************************************************************
        // High-Explosive(HE) cannon ball can ONLY destory brick stuff
        if itemA:GetName() = "objHECannonBall" and itemB:GetName() = "objBrickBox"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                roo:QueueDelObj(itemB)
            else
                itemB:SetUnmovable()
            end
        elseif itemA:GetName() = "objBrickBox" and itemB:GetName() = "objHECannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                roo:QueueDelObj(itemA)
            else
                itemA:SetUnmovable()
            end
        end

        if itemA:GetName() = "objHECannonBall" and itemB:GetName() = "objBrickRectangle"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                roo:QueueDelObj(itemB)
            else
                itemB:SetUnmovable()
            end
        elseif itemA:GetName() = "objBrickRectangle" and itemB:GetName() = "objHECannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                roo:QueueDelObj(itemA)
            else
                itemA:SetUnmovable()
            end
        end
        // Standard will do nothing to brick objects
        if itemA:GetName() = "objStandardCannonBall" and itemB:GetName() = "objBrickBox"
            itemB:SetUnmovable()
        elseif itemA:GetName() = "objBrickBox" and itemB:GetName() = "objStandardCannonBall"
            itemA:SetUnmovable()
        end

        if itemA:GetName() = "objStandardCannonBall" and itemB:GetName() = "objBrickRectangle"
            itemB:SetUnmovable()
        elseif itemA:GetName() = "objBrickRectangle" and itemB:GetName() = "objStandardCannonBall"
            itemA:SetUnmovable()
        end
        // AP will do nothing to brick objects
        if itemA:GetName() = "objAPCannonBall" and itemB:GetName() = "objBrickBox"
            itemB:SetUnmovable()
        elseif itemA:GetName() = "objBrickBox" and itemB:GetName() = "objAPCannonBall"
            itemA:SetUnmovable()
        end

        if itemA:GetName() = "objAPCannonBall" and itemB:GetName() = "objBrickRectangle"
            itemB:SetUnmovable()
        elseif itemA:GetName() = "objBrickRectangle" and itemB:GetName() = "objAPCannonBall"
            itemA:SetUnmovable()
        end
       
        if itemA:GetName() = "objHECannonBall" and itemB:GetName() = "objFish"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                roo:QueueDelObj(itemB)
            end
        elseif itemA:GetName() = "objFish" and itemB:GetName() = "objHECannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                roo:QueueDelObj(itemA)
            end
        end
        //*************************************************************************************************************************************************************
        // Armor-piercing(AP) cannon ball can ONLY destory steel stuff
        if itemA:GetName() = "objAPCannonBall" and itemB:GetName() = "objSteelBox"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                roo:QueueDelObj(itemB)
            else
                itemB:SetUnmovable()
            end
        elseif itemA:GetName() = "objSteelBox" and itemB:GetName() = "objAPCannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                roo:QueueDelObj(itemA)
            else
                itemA:SetUnmovable()
            end
        end

        if itemA:GetName() = "objAPCannonBall" and itemB:GetName() = "objSteelRectangle"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                roo:QueueDelObj(itemB)
            else
                itemB:SetUnmovable()
            end
        elseif itemA:GetName() = "objSteelRectangle" and itemB:GetName() = "objAPCannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                roo:QueueDelObj(itemA)
            else
                itemA:SetUnmovable()
            end
        end
        // Standard will do nothing to steel objects
        if itemA:GetName() = "objStandardCannonBall" and itemB:GetName() = "objSteelBox"
            itemB:SetUnmovable()
        elseif itemA:GetName() = "objSteelBox" and itemB:GetName() = "objStandardCannonBall"
            itemA:SetUnmovable()
        end

        if itemA:GetName() = "objStandardCannonBall" and itemB:GetName() = "objSteelRectangle"
            itemB:SetUnmovable()
        elseif itemA:GetName() = "objSteelRectangle" and itemB:GetName() = "objStandardCannonBall"
            itemA:SetUnmovable()
        end
        // HE will do nothing to wooden objects
        if itemA:GetName() = "objHECannonBall" and itemB:GetName() = "objSteelBox"
            itemB:SetUnmovable()
        elseif itemA:GetName() = "objSteelBox" and itemB:GetName() = "objHECannonBall"
            itemA:SetUnmovable()
        end

        if itemA:GetName() = "objHECannonBall" and itemB:GetName() = "objSteelRectangle"
            itemB:SetUnmovable()
        elseif itemA:GetName() = "objSteelRectangle" and itemB:GetName() = "objHECannonBall"
            itemA:SetUnmovable()
        end

        if itemA:GetName() = "objAPCannonBall" and itemB:GetName() = "objFish"
            force = itemA:GetLinearVelocity()
            if force:Length() > 400
                roo:QueueDelObj(itemB)
            end
        elseif itemA:GetName() = "objFish" and itemB:GetName() = "objAPCannonBall"
            force = itemB:GetLinearVelocity()
            if force:Length() > 400
                roo:QueueDelObj(itemA)
            end
        end
    end
end