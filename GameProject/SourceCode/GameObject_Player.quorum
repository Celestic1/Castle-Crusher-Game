use GameObject
use GameObject_Attribs
use GameObject_Attrib_List
use GameKeyboard
use Libraries.Game.Game
use Libraries.Containers.List
use Libraries.Game.Graphics.Drawable
use Libraries.Compute.Vector2
use Libraries.Interface.Events.KeyboardEvent

class GameObject_Player is GameObject, GameKeyboard
    List<GameObject> myAmmo
    private number baseFX = 10000
    private number baseFY = 10000
    private number velScaleFactor = 400
    private number offSideScale = 4
    Vector2 MyForce
    Drawable barX
    Drawable barY
    
    action FireCannon(integer AmmoRef)
        if not (AmmoRef < myAmmo:GetSize() and AmmoRef >= 0)
            output "Cannon is out of ammo!"
            return now
        end
        GameObject toFire = myAmmo:Get(AmmoRef)
        toFire:SetPosition(me:GetGlobalX()+me:GetWidth()/1.1,me:GetGlobalY()-me:GetRotation())
        toFire:ApplyForceToCenter(MyForce)
        toFire:Show()
        myAmmo:RemoveAt(AmmoRef)
        output "Shot fired! " + myAmmo:GetSize() + " ammo left."
        ResetForce()
    end

    action LoadCannon(GameObject newAmmo)
//        if newAmmo:GetAttributes():IsProjectile()
            newAmmo:Hide()
            Add(newAmmo)
            myAmmo:Add(newAmmo)
            output "Ammo loaded; " + myAmmo:GetSize() + " left."
//        else
//            output "Tried to load a bad projectile!"
//        end
    end

    action InitGameObject
        parent:GameObject:InitGameObject()
        ResetForce()
	me:LoadFilledRectangle(80,20)
    end

    action ResetForce
        MyForce:Set(baseFX,baseFY)
    end

    action ReloadBars
	barX:LoadFilledRectangle(cast(integer,MyForce:GetX()/velScaleFactor),cast(integer,me:GetHeight()/offSideScale))
	barY:LoadFilledRectangle(cast(integer,me:GetWidth()/offSideScale), cast(integer,MyForce:GetY()/velScaleFactor))
    end

    action StartKey(KeyboardEvent event)
//      output "STARTKEY"
        if event:keyCode = event:SPACE
            FireCannon(0)
        end
        if event:keyCode = event:W
            //output "W key rotation: " + me:GetRotation()
            if me:GetRotation() > -90
                me:Rotate(-1)
            end
            else
                me:Rotate(0)
       end
       if event:keyCode = event:S
            //output "S key rotation: " + me:GetRotation()
            if me:GetRotation() < 0
                me:Rotate(1)
            end
            else
                me:Rotate(0)
       end
    end

    action AddToGame (Game newGame)
        parent:GameObject:AddToGame(newGame)
        newGame:AddKeyboardListener(me)
    end

    action RemoveFromGame (Game newGame)
        parent:GameObject:RemoveFromGame(newGame)
        newGame:RemoveKeyboardListener(me)
    end
end