use GameObject
use GameObject_Attrib_List
use GameKeyboard
use Libraries.Game.Game
use Libraries.Containers.List
use Libraries.Game.Graphics.Drawable
use Libraries.Compute.Vector2
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Compute.Math
use Libraries.Game.InputMonitor

class GameObject_Player is GameObject, GameKeyboard
    List<GameObject> myAmmo
//    private number baseFX = 10000
//    private number baseFY = 0
    private number ForceCap = 50000
    private number Force = 0
    private number velScaleFactor = 400
    private number offSideScale = 4
    Vector2 MyForce
    Drawable barX
    Drawable barY
    Drawable PowerBar
    Drawable PowerBarBackground
    Drawable Cannon
    Math MyMath
    InputMonitor monitor
    KeyboardEvent keys
//    Game parentGame // I hate this hack and want it gone ASAP
    
    action FireCannon(integer AmmoRef)
        if not (AmmoRef < myAmmo:GetSize() and AmmoRef >= 0)
            output "Cannon is out of ammo!"
            return now
        end
        GameObject toFire = myAmmo:Get(AmmoRef)
        toFire:SetPosition(GetBarrelX()-toFire:GetWidth()/2,GetBarrelY()-toFire:GetHeight()/2)
        //output "(" + me:GetGlobalX() + " + " + me:GetWidth()/1.1 + "," + me:GetGlobalY() + " - " + me:GetRotation() + ") = (" + (me:GetGlobalX()+me:GetWidth()/1.1) + "," + (me:GetGlobalY()-me:GetRotation()) + ")"
        MyForce:Set(GetVelocityX(),GetVelocityY())
        //output "(" + MyForce:GetX() + "," + MyForce:GetY() + ") vs (" + ThisLanguageSucks:GetX() + "," + ThisLanguageSucks:GetY() + ")"
        toFire:SetResponsive()
        toFire:ApplyForceToCenter(MyForce)
        toFire:Show()
        myAmmo:RemoveAt(AmmoRef)
        //output "Force: " + Force
        output "Shot fired! " + myAmmo:GetSize() + " ammo left."
        ResetForce()
    end

    action LoadCannon(GameObject newAmmo)
//        if newAmmo:GetAttributes():IsProjectile()
            newAmmo:Hide()
            //Add(newAmmo)
            myAmmo:Add(newAmmo)
            //output "Ammo loaded; " + myAmmo:GetSize() + " left."
//        else
//            output "Tried to load a bad projectile!"
//        end
    end

    action InitGameObject
        parent:GameObject:InitGameObject()
        ResetForce()
	me:LoadFilledRectangle(80,20)
    end

    // resets Force after we released Space Bar
    action ResetForce
        Force = 0
    end

    //don't need this
    action ReloadBars
	barX:LoadFilledRectangle(cast(integer,MyForce:GetX()/velScaleFactor),cast(integer,me:GetHeight()/offSideScale))
	barY:LoadFilledRectangle(cast(integer,me:GetWidth()/offSideScale), cast(integer,MyForce:GetY()/velScaleFactor))
    end


    action Update(number seconds)
	if HaveActiveKeys()
	    ActiveKeysUpdate()
	end
    end

    action AddToGame (Game newGame)
        parent:GameObject:AddToGame(newGame)
	AddKeyboardToGame(newGame)
	SetupPowerBars(newGame)
    end

    action SetupPowerBars (Game newGame)
	PowerBar:LoadFilledRectangle(20,cast(integer,Force)/500)
	PowerBar:SetPosition(20,40)
	PowerBarBackground:LoadRectangle(20,cast(integer,ForceCap)/500)
	PowerBarBackground:SetPosition(20,40)
	newGame:Add(PowerBar)
	newGame:Add(PowerBarBackground)
    end

    action UpdatePowerBar
	PowerBar:LoadFilledRectangle(20,cast(integer,Force)/500)
    end

    action RemoveFromGame (Game newGame)
        parent:GameObject:RemoveFromGame(newGame)
        newGame:RemoveKeyboardListener(me)
    end

    action GetBarrelX returns number
        return (GetGlobalX()+ GetWidth()/2 + (MyMath:Cosine(GetRotationInRadians()) * GetWidth()/2))
    end

    action GetBarrelY returns number
        return (GetGlobalY() + GetHeight()/2 - (MyMath:Sine(GetRotationInRadians()) * GetWidth()/2))
    end

    action GetVelocityX() returns number
        return MyMath:Cosine(GetRotationInRadians()) * Force
    end

    action GetVelocityY() returns number
        return -(MyMath:Sine(GetRotationInRadians()) * Force)
    end

    action removeAmmo
 
    end

    // Keyboard Managers
    action StartKey(KeyboardEvent event)
    end

    action EndKey(KeyboardEvent event)
	if event:keyCode = event:SPACE
            FireCannon(0)
	    ResetForce()
	    UpdatePowerBar()
	end
    end

    action OperateOnKey(KeyboardEvent event)
	if event:keyCode = event:W
            if me:GetRotation() > -90
                me:Rotate(-1)
            end
	end

	if event:keyCode = event:S
            if me:GetRotation() < 0
                me:Rotate(1)
            end
	end

	if event:keyCode = event:SPACE
            if Force < ForceCap
                Force = Force + 500
                if Force >= ForceCap
                    Force = 0
                end
            end
//            output "Force: " + Force
	    UpdatePowerBar()
	end
    end
end