use Libraries.Containers.Array
use Libraries.Containers.Stack
use Libraries.Containers.HashTable
use Libraries.Game.Game
use Libraries.Game.Graphics.Camera
use Libraries.Game.Graphics.Drawable
use Libraries.System.File
use GameObject
//use GameObject_Attrib_List
use GameObject_Player
use Libraries.Sound.Audio

class Main is Game
    GameRoom RefRoom
    Stack<GameRoom> RoomStack
    HashTable <text, integer> dudesInPlay
    HashTable<text,GameRoom> MenuTable
    GameMouse GameMouseListener
    GameCollision GameCollisionListener
//    GameObject_Attrib_List src
    Camera camera = undefined
    GameObject_Library CoreLibrary
//    Drawable mainScreen
    MainMenu mainmenu
    LevelSelector ls
    inGameMenu igm
    Victory VictoryRoom
    Defeat DefeatRoom
    boolean isLoaded = false
    
    Audio first
    Audio second
    Audio victoryTheme
    Audio defeatTheme
    Audio mainTheme
    action Main

        //GameMouseListener:RefRoom = RefRoom
        GameCollisionListener:main = me

        // Fixed screensize / gamename
        EnableResizing(true)
        SetScreenSize(RefRoom:pg_ScreenSizeX , RefRoom:pg_ScreenSizeY)
        SetGameName("Castle Crusher")
        StartGame()
    end

    action CreateGame
        XMLFileManager FileMan
        XMLNode ReadRoot = FileMan:GetXMLFromFile("Definitions/CoreDefs.xml")
	CoreLibrary:LoadLibraryFromTree(ReadRoot)
	CoreLibrary:OutputHashTableContents()
        camera = GetCamera2D()
        EnablePhysics2D(true)
        SetGravity2D(0, -75)
        //AddMouseListener(GameMouseListener)
        //AddMouseMovementListener(GameMouseListener)
        AddCollisionListener(GameCollisionListener)
        RefRoom:pg_CamMaxXOffset = 200
	/*GameRoom_Level TestRoom
	TestRoom:LoadRoomFromFile("Maps/TestMap.xml",CoreLibrary)
	TestRoom:AddRoomToGame(me)*/

        // Draw cursor
        //Add(GameMouseListener)
        //AddMouseListener(GameMouseListener)
        //AddMouseMovementListener(GameMouseListener)
        //RefRoom:pg_CamMaxXOffset = 200
        mainmenu:InitMainMenu(me)
        MenuTable:Add("MainMenu",mainmenu)
        PushRoomStack(mainmenu)
        
        ls:CreateScreen(me)
        MenuTable:Add("LevelSelector",ls)
        VictoryRoom:createScreen(me)
        MenuTable:Add("Victory", VictoryRoom)
        DefeatRoom:createScreen(me)
        MenuTable:Add("Defeat",DefeatRoom)
        //igm:createScreen(me)
        //MenuTable:Add("InGameMenu",igm)
        
        first:Load("assets/Sounds/dying.wav")
        second:Load("assets/Sounds/wilhelm.wav")
        GameCollisionListener:setAudio(first,second)
        victoryTheme:Load("assets/Sounds/victory.wav")
        defeatTheme:Load("assets/Sounds/defeat.wav")

        //Add(GameMouseListener)
    end

    action Update(number seconds)
        if RoomStack:Peek():getDudes() > 0 
            if not isLoaded
                //isLoaded = true
                GameCollisionListener:setStarCount(RoomStack:Peek():getDudes())
                //output "GCL has " + GameCollisionListener:getStarCount() + " dudes."
                isLoaded = true
            end
            if isLoaded
                //output "Loaded but NOT VICTORIOUS!!"
                if GameCollisionListener:Victorious()
                    //output "VICTORIOUS!!"
                    isLoaded = false
                    GameCollisionListener:resetVictory()
                    RoomStack:Peek():resetDudes()
                    GameCollisionListener:setStarCount(RoomStack:Peek():getDudes())
                    //RoomStack:Peek():getDudes()
                    MenuOntoRoomStack("Victory")
                    //VictoryRoom:createVictory(me)
                end
            end    
        end
    end

    action GetCoreLibrary returns GameObject_Library
        return CoreLibrary
    end

    // ROOM AND STACK MANAGEMENT
    // PRETTY FRIGGIN IMPORTANT

    action PushRoomStack (GameRoom NewRoom)
        if RoomStack:GetSize() > 0
            RoomStack:Peek():RemoveRoomFromGame(me)
            //output "Removed Room"
        end
        RoomStack:Push(NewRoom)
        currentRoomName = RoomStack:Peek():getLevelName()
        //output "Got to AddRoom"
        RoomStack:Peek():AddRoomToGame(me)
    end

    action MenuOntoRoomStack (text NextMenu)
        if (NextMenu = "Victory")
            victoryTheme:Play()
        end
        if (NextMenu = "Defeat")
            defeatTheme:Play()
        end
        PushRoomStack(MenuTable:GetValue(NextMenu))
    end

    action PopRoomStack
        if RoomStack:GetSize() <= 0
            Exit()
        else
            RoomStack:Peek():RemoveRoomFromGame(me)
            RoomStack:Peek():DumpRoom()
            RoomStack:Pop()
            if RoomStack:GetSize() > 0
                RoomStack:Peek():AddRoomToGame(me)
            else
                Exit()
            end
        end
    end
    action GetCoreLib returns GameObject_Library
        return CoreLibrary
    end
end