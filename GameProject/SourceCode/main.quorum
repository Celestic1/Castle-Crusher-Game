use Libraries.Game.Game
use Libraries.Game.Graphics.Drawable
use Libraries.Interface.Events.CollisionListener2D
use Libraries.Interface.Events.CollisionEvent2D
use Libraries.Interface.Events.KeyboardListener
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Compute.Vector2

class Main is Game, KeyboardListener, CollisionListener2D
    GameRoom roo

    g_CatIndex = -1
    Vector2 g_Jump
    Vector2 g_Left
    Vector2 g_Right

    // Initial Game Settings
    g_GameName = "Physics [cat] Game"
    g_ScreenSizeX = 1000
    g_ScreenSizeY = 320 
    g_GridX = 40          // This is the width  of each 'grid' on map
    g_GridY = 40          // This is the height of each 'grid' on map

    action Main
        SetScreenSize(g_ScreenSizeX , g_ScreenSizeY)    // Screen Size is fixed
        SetGameName(g_GameName)                         // Game Title is fixed
        StartGame()
    end

    action CreateGame
        EnablePhysics2D(true)
        SetGravity2D(0, -200)
        AddKeyboardListener(me)
        AddCollisionListener(me)
        g_Jump:Set(0, 25000)
        g_Right:Set(10000, 0)
        g_Left:Set(-10000, 0)
        LoadRoom("./map1.txt")
    end

    action Update(number seconds)
    end

    action LoadRoom(text roomTextPath)
        UnloadRoom() // Remove all exisiting room objects on screen before loading new room
        roo:InitializeRoo(roomTextPath, g_ScreenSizeX, g_ScreenSizeY, g_GridX, g_GridY)

        integer i = roo:GetObjCount()
        repeat until i = 0
            Add(roo:GetObjAtIndex(i-1))
            if (roo:GetObjAtIndex(i-1):GetName() = "objCat")
                g_CatIndex = i - 1
            end
            i = i - 1
        end
    end

    action UnloadRoom
        g_CatIndex = -1
        repeat until roo:GetObjCount() = 0
            //NOTE! this is not deleting anything, when using dispose() it leaves an ugly black box around where the drawable used to be
            // need to find proper way of dealing with removal of items
            //roo:GetObjAtIndwaex(0):Dispose()
            roo:GetObjAtIndex(0):SetAlpha(0)
            roo:GetObjAtIndex(0):EnablePhysics(false)
            roo:GetObjAtIndex(0):SetCollidable(false)
            roo:DeleteObjAtIndex(0)
        end
    end

    action PressedKey(KeyboardEvent event)
        if g_CatIndex > -1
            if event:keyCode = event:W
                roo:GetObjAtIndex(g_CatIndex):ApplyForceToCenter(g_Jump)
            end
            if event:keyCode = event:A
                roo:GetObjAtIndex(g_CatIndex):ApplyForceToCenter(g_Left)
                roo:GetObjAtIndex(g_CatIndex):ApplyTorque(150000)
            end
            if event:keyCode = event:D
                roo:GetObjAtIndex(g_CatIndex):ApplyForceToCenter(g_Right)
                roo:GetObjAtIndex(g_CatIndex):ApplyTorque(-150000)
            end
        end
    end

    action BeginCollision(CollisionEvent2D event)
        Drawable itemA = cast(Drawable, event:GetItemA())
        Drawable itemB = cast(Drawable, event:GetItemB())

        if itemA:GetName() = "objFish" and itemB:GetName() = "objCat"
            itemA:SetAlpha(0)
        end
        if itemA:GetName() = "objCat" and itemB:GetName() = "objFish"
            itemB:SetAlpha(0)
        end

        if itemA:GetName() = "objExit" and itemB:GetName() = "objCat"
            LoadRoom("./map1.txt")
            itemB:SetPosition(0,0)
        end
        if itemA:GetName() = "objCat" and itemB:GetName() = "objExit"
            LoadRoom("./map1.txt")
            itemA:SetPosition(0,0)
        end

        if itemA:GetName() = "objKey" and itemB:GetName() = "objCat"
            itemA:SetAlpha(0)
            itemA:SetCollidable(false)
            integer i = roo:GetObjCount()
            repeat until i = 0
                if (roo:GetObjAtIndex(i-1):GetName() = "objLock")
                    roo:GetObjAtIndex(i-1):SetAlpha(0)
                    roo:GetObjAtIndex(i-1):EnablePhysics(false)
                end
                i = i - 1
            end
        end
        if itemA:GetName() = "objCat" and itemB:GetName() = "objKey"
            itemB:SetAlpha(0)
            itemA:SetCollidable(false)
            integer i = roo:GetObjCount()
            repeat until i = 0
                if (roo:GetObjAtIndex(i-1):GetName() = "objLock")
                    roo:GetObjAtIndex(i-1):SetAlpha(0)
                    roo:GetObjAtIndex(i-1):EnablePhysics(false)
                end
                i = i - 1
            end
        end

    end
end