use Libraries.Game.Game
use Libraries.Game.Graphics.Drawable
use GameObject_Attrib_List
use GameObject
use GameObject_Player
use Libraries.Containers.Array

class Main is Game
    GameRoom roo
    GameMouse GameMouseListener
    GameCollision GameCollisionListener
    GameObject_Attrib_List src

    action Main
        GameMouseListener:roo = roo
        GameCollisionListener:roo = roo
        // Fixed screensize / gamename
        SetScreenSize(roo:pg_ScreenSizeX , roo:pg_ScreenSizeY)
        SetGameName("Castle Crusher")
        StartGame()
    end

    action CreateGame
        EnablePhysics2D(true)
        SetGravity2D(0, -200)
        AddCollisionListener(GameCollisionListener)
        AddMouseListener(GameMouseListener)
        AddMouseMovementListener(GameMouseListener)
        roo:LoadRoom("./map0.txt")

        // Draw cursor
        Add(GameMouseListener)
    end

    action Update(number seconds)
        // Check if there are objs that need to be removed
        repeat until roo:GetDelQueueSize() = 0
            GameObject tmpDraw = roo:DequeueDelObj()
            tmpDraw:RemoveFromGame(me)
        end

        // Check if there are objs that need to be added
        repeat until roo:GetAddQueueSize() = 0
            GameObject tmpDraw = roo:DequeueAddObj()
            tmpDraw:AddToGame(me)        // Add standard Drawable

	    if tmpDraw:GetAttributes():GetObjectName() = "objCannon"
                // for reasons mysterious, you can't do this more than 31 times without a crash
                    HackedTogetherCannonLoad (cast(GameObject_Player,tmpDraw), 10)
	    end
            //end
        end
    end

    action HackedTogetherCannonLoad (GameObject_Player PlayCan, integer count)
        repeat count times
            GameObject nextShot
            nextShot:InitGameObject(src:GetNewCannonBallAttribs(0,0))
            nextShot:AddToGame(me)
            PlayCan:LoadCannon(nextShot)
        end
    end

end