use Libraries.Game.Game
use Libraries.Interface.Events.KeyboardListener
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Game.Graphics.Drawable
use Libraries.Compute.Vector2
use Libraries.Game.InputMonitor

class PlayerCannon is KeyboardListener, Drawable
    xVel = 0
    yVel = 0
    number GlobalY = 0
    number GlobalX = 0
    Game parentGame
    Drawable xBar
    number velScaleFactor = 400
    number offSideScale = 4
    Drawable yBar
    InputMonitor monitor
    KeyboardEvent keys


    action FireCannon(Drawable newProj)
        parentGame:Add(newProj)
	newProj:SetPosition(me:GetGlobalX()+me:GetWidth()/1.1,me:GetGlobalY()-me:GetRotation())
        //output "globalX: " + me:GetGlobalX()
        //output "globalY: " + me:GetGlobalY()
        Vector2 fireVector
        xVel = 10000
        yVel = 7500
        //number Rotation = me:GetRotation()
        fireVector:Set(xVel, yVel) 
        newProj:ApplyForceToCenter(fireVector)
	xBar:LoadFilledRectangle(cast(integer,xVel/velScaleFactor),cast(integer,me:GetHeight()/offSideScale))
	yBar:LoadFilledRectangle(cast(integer,me:GetWidth()/offSideScale), cast(integer,yVel/velScaleFactor))
    end


    action PressedKey(KeyboardEvent event)
        if event:keyCode = event:SPACE
            Drawable cannonBall
	    cannonBall:LoadFilledCircle(8)
	    cannonBall:EnablePhysics(true)
            cannonBall:SetResponsive()
            cannonBall:SetCollidable(true)
            FireCannon(cannonBall)
            /*
	elseif event:keyCode = event:A
	    xVel = xVel - 4000
	    if xVel < 0
		xVel = 0
	    end
	elseif event:keyCode = event:D
	    xVel = xVel + 4000
	elseif event:keyCode = event:S
	    yVel = yVel - 4000
	    if yVel < 0
		yVel = 0
	    end
	elseif event:keyCode = event:W
	    yVel = yVel + 4000
*/
        end
	xBar:LoadRectangle(cast(integer,xVel/velScaleFactor),cast(integer,me:GetHeight()/offSideScale))
	yBar:LoadRectangle(cast(integer,me:GetWidth()/offSideScale), cast(integer,yVel/velScaleFactor))
    end
    
    on create
        xVel = 10000
        yVel = 0
	me:LoadFilledRectangle(80,20)
        output "Object height" + me:GetHeight()
        output "Object width" + me:GetWidth()
        //GlobalX = me:GetCenterX()
        //GlobalY = me:GetCenterY()
	//xBar:LoadFilledRectangle(cast(integer,xVel/velScaleFactor),cast(integer,me:GetHeight()/offSideScale))
	yBar:LoadFilledRectangle(cast(integer,me:GetWidth()/offSideScale), cast(integer,yVel/velScaleFactor))
    end

    action AddToGame(Game targetGame, number xPos, number yPos)
        parentGame = targetGame
	parentGame:Add(me)
	parentGame:AddKeyboardListener(me)
	//parentGame:Add(xBar)
	//parentGame:Add(yBar)
	me:SetPosition(xPos, yPos)
        //output "Screen Height" + targetGame:GetScreenHeight()
        //output "Screen Width" + targetGame:GetScreenWidth()
	//xBar:SetPosition(0, 100)
	//yBar:SetPosition(50, 100)
    end

    action Update(number seconds)
       if monitor:IsKeyPressed(keys:W)
            //output "W key rotation: " + me:GetRotation()
            if me:GetRotation() > -90
                me:Rotate(-1)
            end
            else
                me:Rotate(0)
       end
       if monitor:IsKeyPressed(keys:S)
            //output "S key rotation: " + me:GetRotation()
            if me:GetRotation() < 0
                me:Rotate(1)
            end
            else
                me:Rotate(0)
       end
    end

end